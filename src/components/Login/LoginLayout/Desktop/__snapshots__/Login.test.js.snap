exports[`<Login/> should render a component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className={undefined}>
    <div
        className={undefined}
        style={
            Object {
                "backgroundImage": "url(test-file-stub)",
                "backgroundRepeat": "no-repeat",
                "backgroundSize": "cover",
              }
        }>
        <div
            className={undefined}>
            <div
                className={undefined}
                data-spec="login-logo" />
            <div
                className={undefined}
                data-spec="login-form" />
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className={undefined}>
      <div
            className={undefined}
            style={
                  Object {
                        "backgroundImage": "url(test-file-stub)",
                        "backgroundRepeat": "no-repeat",
                        "backgroundSize": "cover",
                      }
            }>
            <div
                  className={undefined}>
                  <div
                        className={undefined}
                        data-spec="login-logo" />
                  <div
                        className={undefined}
                        data-spec="login-form" />
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Login />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Login {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className={undefined}>
          <div
                    className={undefined}
                    style={
                              Object {
                                        "backgroundImage": "url(test-file-stub)",
                                        "backgroundRepeat": "no-repeat",
                                        "backgroundSize": "cover",
                                      }
                    }>
                    <div
                              className={undefined}>
                              <div
                                        className={undefined}
                                        data-spec="login-logo" />
                              <div
                                        className={undefined}
                                        data-spec="login-form" />
                    </div>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className={undefined}>
          <div
                    className={undefined}
                    style={
                              Object {
                                        "backgroundImage": "url(test-file-stub)",
                                        "backgroundRepeat": "no-repeat",
                                        "backgroundSize": "cover",
                                      }
                    }>
                    <div
                              className={undefined}>
                              <div
                                        className={undefined}
                                        data-spec="login-logo" />
                              <div
                                        className={undefined}
                                        data-spec="login-form" />
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Login />,
}
`;
