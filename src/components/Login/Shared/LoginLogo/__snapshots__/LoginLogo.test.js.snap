exports[`<LoginLogo/> should render a component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div
        className={undefined}>
        <div
            className={undefined}
            data-spec="logo-wrapper">
            <test-file-stub
                data-spec="logo" />
        </div>
        <div
            className={undefined}
            data-spec="product-name">
            PRODUCT TITLE
        </div>
    </div>
    <div
        className={undefined}>
        Copyright © 2017 AT&T. All rights reserved.
    </div>
</div>,
  "nodes": Array [
    <div>
      <div
            className={undefined}>
            <div
                  className={undefined}
                  data-spec="logo-wrapper">
                  <test-file-stub
                        data-spec="logo" />
            </div>
            <div
                  className={undefined}
                  data-spec="product-name">
                  PRODUCT TITLE
            </div>
      </div>
      <div
            className={undefined}>
            Copyright © 2017 AT&T. All rights reserved.
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <LoginLogo
        productName="PRODUCT TITLE" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "productName": "PRODUCT TITLE",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div
                    className={undefined}>
                    <div
                              className={undefined}
                              data-spec="logo-wrapper">
                              <test-file-stub
                                        data-spec="logo" />
                    </div>
                    <div
                              className={undefined}
                              data-spec="product-name">
                              PRODUCT TITLE
                    </div>
          </div>
          <div
                    className={undefined}>
                    Copyright © 2017 AT&T. All rights reserved.
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <div
                    className={undefined}>
                    <div
                              className={undefined}
                              data-spec="logo-wrapper">
                              <test-file-stub
                                        data-spec="logo" />
                    </div>
                    <div
                              className={undefined}
                              data-spec="product-name">
                              PRODUCT TITLE
                    </div>
          </div>
          <div
                    className={undefined}>
                    Copyright © 2017 AT&T. All rights reserved.
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LoginLogo
    productName="PRODUCT TITLE" />,
}
`;
